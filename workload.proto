syntax = "proto2";

// Install grpcio and grpc_tools 
// Then Run: python -m grpc_tools.protoc -I./ --python_out=./ --grpc_python_out=./ workload.proto
// Produces 2 Files: workload_pb2.py and workload_pb2_grpc.py

// Define Messages to Send and Receive Data
// Request for Workload (RFW) and Response for Data (RFD) Messages
message WorkloadRFD {
    required int32 rfw_id = 1;
    required int32 last_batch_id = 2;
    
    //Sample Data Returned 
    message WorkloadData {
        required int32 CPUUtilization_Average = 1;
        required int32 NetworkIn_Average = 2;
        required int32 NetworkOut_Average = 3;
        required float MemoryUtilization_Average = 4;
        required float Final_Target = 5;
    }

    repeated WorkloadData requested_data_samples = 3;
}

message WorkloadRFW {
    required int32 rfw_id = 1;
    required bool benchmark_type = 2;
        
    // Create Enum for Workload Metric Over Using int32
    enum WorkloadMetric {
        CPU = 1;
        NetworkIn = 2;
        NetworkOut = 3;
        Memory = 4;
    }

    required WorkloadMetric workload_metric = 3;
    required int32 batch_id = 4;
    required int32 batch_size = 5;
    required bool data_type = 6;
}

// Define Service with Remote Procedure Call (RPC) 
// Workload Method Takes in Request for Workload (RFW) And Returns Response for Data (RFD)
service WorkloadService {
    rpc Workload (WorkloadRFW) returns (WorkloadRFD);
}
